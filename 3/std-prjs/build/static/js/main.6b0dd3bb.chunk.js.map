{"version":3,"sources":["components/Searchable/Search/Search.module.css","components/UI/Card/Card.module.css","components/Searchable/Searchable/Searchable.module.css","components/UI/Button/Button.module.css","components/Navigation/Navigation.module.css","components/Find/Find.module.css","components/Popup/Popup.module.css","components/Add/Add.module.css","components/Groups/Group.module.css","components/Searchable/Display/Display.js","components/UI/Card/Card.js","components/Searchable/Search/Search.js","components/Searchable/Searchable/Searchable.js","components/Students/Student.js","components/UI/Button/Button.js","components/SendMessage/SendMessageButton.js","components/Students/StudentSearch.js","components/Groups/GroupMember.js","components/Groups/Group.js","components/Groups/GroupSearch.js","components/Navigation/Navigation.js","components/Add/AddStudent.js","components/Find/Find.js","components/Add/AddGroup.js","components/Add/Add.js","components/Popup/Message.js","components/Popup/Popup.js","components/SendMessage/SendMessage.js","App.js","reportWebVitals.js","index.js","components/Students/Student.module.css","components/SendMessage/SendMessage.module.css"],"names":["module","exports","Display","props","elems","Card","className","classes","card","children","Search","id","shortid","generate","searchbox","htmlFor","text","onChange","e","onFilterUpdate","target","value","trim","makeSearchable","prompt","filterElem","toComponent","useState","filter","setFilter","map","i","some","s","includes","searchable","Student","student","name","description","tags","subjects","Button","type","button","onClick","disabled","SendMessageButton","to","studentAttributes","StudentSearch","GroupMember","role","Group","g","group","members","sr","si","subject","GroupSearch","flatMap","Navigation","nav","AddStudent","useRef","nameRef","emailRef","descriptionRef","tagsRef","subjectsRef","onSubmit","event","preventDefault","current","email","split","console","log","onNewStudent","ref","required","rows","Find","find","options","opt","AddGroup","submitHandler","state","groupName","length","onNewGroup","alert","addMember","setState","st","this","checked","addExisting","students","elements","selectedStudents","React","Component","Add","selection","setSelection","body","JSON","stringify","choice","Message","popup","Popup","duration","show","onClear","useEffect","setTimeout","ReactDOM","createPortal","document","getElementById","SendMessage","useParams","message","setMessage","setPopup","thing","groups","form","defaultStudents","defaultGroups","useLocalItems","storageName","defaults","parse","localStorage","getItem","item","setItems","items","newItems","setItem","App","navigate","useNavigate","addStudent","addGroup","thenRedirect","f","arg","path","element","exact","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.6b0dd3bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbox\":\"Search_searchbox__4MGd5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1jhAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchable\":\"Searchable_searchable__3Ql2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1hbQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__1CuM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"Find_find__24pbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__1Xi_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"choice\":\"Add_choice__bVlJf\",\"add-group\":\"Add_add-group__3WoJs\",\"current-members\":\"Add_current-members__sJN7F\",\"select-student-type\":\"Add_select-student-type__DvwUs\",\"select-role\":\"Add_select-role__2w3Xf\",\"add-student\":\"Add_add-student__16eUm\",\"find-student\":\"Add_find-student__WvaPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group-entry\":\"Group_group-entry__RTkxp\",\"group-card\":\"Group_group-card__ZIRFf\",\"group-member\":\"Group_group-member__201cl\"};","\r\nconst Display = (props) => {\r\n  return (\r\n    <div>\r\n      {props.elems}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;","import classes from './Card.module.css';\r\n\r\nconst Card = (props) => (\r\n  <div className={`${classes.card} ${props.className}`}>{props.children}</div>\r\n);\r\n\r\nexport default Card;\r\n","import shortid from 'short-id';\r\nimport classes from './Search.module.css';\r\nimport Card from '../../UI/Card/Card';\r\n\r\nconst Search = (props) => {\r\n  const id = shortid.generate();\r\n\r\n  return (\r\n    <Card className={classes.searchbox}>\r\n      <label htmlFor={id}>{props.text}</label>\r\n      <input\r\n        id={id}\r\n        onChange={(e) => props.onFilterUpdate(e.target.value.trim())}\r\n      ></input>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useState } from 'react';\r\n\r\nimport Display from './../Display/Display';\r\nimport Search from './../Search/Search';\r\nimport Card from '../../UI/Card/Card';\r\nimport classes from './Searchable.module.css';\r\n\r\n\r\n// props.elems : [elem]\r\n// props.filter : elem -> [String]\r\n// props.toComponent : elem -> Component\r\n// Ooh, nice higher-order component.\r\nconst makeSearchable = (prompt, filterElem, toComponent) => (props) => {\r\n  const [filter, setFilter] = useState('');\r\n\r\n  // Fixed: during search, indexes would not match the given list and sending a message would redirect to another list.\r\n  // Extremely bad fix for not having IDs in a datatype.\r\n  const elems = props.elems.map((e, i) => [e, i]).filter(([e, _]) => filterElem(e).some(s => s.includes(filter))).map(([e, i]) => toComponent(e, i));\r\n\r\n  return (\r\n    <Card className={classes.searchable}>\r\n      <Search text={prompt} onFilterUpdate={setFilter} />\r\n      <Display elems={elems} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default makeSearchable;","import Card from '../UI/Card/Card';\r\nimport classes from './Student.module.css';\r\n\r\nconst Student = (props) => {\r\n  const s = props.student;\r\n  return (\r\n    <Card className={classes['student-card']}>\r\n      <h2>{s.name}</h2>\r\n      <p>{s.description}</p>\r\n      <p>Tags: {s.tags}</p>\r\n      <p>Subjects: {s.subjects}</p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { Link } from \"react-router-dom\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport classes from './SendMessage.module.css';\r\n\r\nconst SendMessageButton = (props) => {\r\n  return (\r\n    <Link to={`/${props.type}/${props.to}/send`}>\r\n      <Button className={`${classes.button} ${props.className}`}></Button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default SendMessageButton;\r\n","\r\nimport makeSearchable from '../Searchable/Searchable/Searchable';\r\nimport Student from './Student';\r\nimport SendMessageButton from '../SendMessage/SendMessageButton';\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Student.module.css';\r\n\r\nconst studentAttributes = s => [s.description, ...s.tags, ...s.subjects];\r\n\r\nconst StudentSearch = makeSearchable('Find students', studentAttributes, \r\n  (s, i) => \r\n    <Card className={classes['student-entry']} key={'student-' + i}>\r\n      <Student student={s} />\r\n      <SendMessageButton type='student' to={i} />\r\n    </Card>);\r\n\r\n\r\nexport { studentAttributes };  // Also used in group search -> saves some time.\r\nexport default StudentSearch;","import Student from '../Students/Student';\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Group.module.css';\r\n\r\nconst GroupMember = (props) => (\r\n  <Card className={classes['group-member']}>\r\n    <h2>Role: {props.role}</h2>\r\n    <Student student={props.student} />\r\n  </Card>\r\n);\r\n\r\nexport default GroupMember;","import GroupMember from './GroupMember';\r\nimport Card from '../UI/Card/Card';\r\n\r\nimport classes from './Group.module.css';\r\n\r\nconst Group = (props) => {\r\n  const g = props.group;\r\n  return (\r\n    <Card className={classes['group-card']}>\r\n      <h1>Group: {g.name}</h1>\r\n      <Card>\r\n        <p>{g.description}</p>\r\n      </Card>\r\n      <Card>\r\n        <h2>Members</h2>\r\n        {g.members.map((sr, si) => (\r\n          <GroupMember\r\n            role={sr.role}\r\n            student={sr.student}\r\n            key={`group-${props.i}-student-${si}`}\r\n          />\r\n        ))}\r\n      </Card>\r\n      <Card>\r\n      <h2>Subject</h2>\r\n      <p>{g.subject}</p>\r\n      </Card>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import makeSearchable from '../Searchable/Searchable/Searchable';\r\nimport SendMessageButton from '../SendMessage/SendMessageButton';\r\nimport { studentAttributes } from '../Students/StudentSearch';\r\nimport Group from './Group';\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Group.module.css';\r\n\r\n\r\nconst groupAttributes = (g) => [\r\n  g.name,\r\n  g.description,\r\n  g.subject,\r\n  ...g.members.flatMap((sr) => [sr.role, ...studentAttributes(sr.student)]),\r\n];\r\n\r\nconst GroupSearch = makeSearchable('Find groups:', groupAttributes, (g, i) => (\r\n  <Card key={'group-' + i} className={classes['group-entry']}>\r\n    <Group group={g} i={i} />\r\n    <SendMessageButton className={classes['send-message-button']} type='group' to={i} />\r\n  </Card>\r\n));\r\n\r\nexport default GroupSearch;\r\n","\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './Navigation.module.css';\r\nimport Card from '../UI/Card/Card';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <Card>\r\n        <ul>\r\n          <li>\r\n            <Link to='/add'>\r\n              <button>Add Student/Group</button>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/students'>\r\n              <button>Students</button>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/groups'>\r\n              <button>Groups</button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </Card>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import { useRef } from 'react';\r\nimport Card from '../UI/Card/Card';\r\nimport Button from '../UI/Button/Button';\r\nimport classes from './Add.module.css';\r\n\r\nconst AddStudent = (props) => {\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const student = {\r\n      name: nameRef.current.value,\r\n      email: emailRef.current.value,\r\n      description: descriptionRef.current.value,\r\n      tags: tagsRef.current.value.split(),\r\n      subjects: subjectsRef.current.value.split(),\r\n    };\r\n\r\n    console.log(student);\r\n\r\n    props.onNewStudent(student);\r\n  };\r\n\r\n  // Just **ref** it up. I forgot JS has \"limited\" options when it comes to list creation. Basically: traverse (const useRef) [1..5]\r\n  // We're not going to use state and this single source of truth thingy, becuase we don't need it - HTML validation is enough.\r\n  const [nameRef, emailRef, descriptionRef, tagsRef, subjectsRef] = [\r\n    useRef(),\r\n    useRef(),\r\n    useRef(),\r\n    useRef(),\r\n    useRef(),\r\n  ];\r\n\r\n  // I would have abstracted the label-input pair to a different element called Input,\r\n  // but I'm *really* short on time.\r\n  return (\r\n    <form className={classes['add-student']} onSubmit={submitHandler}>\r\n      <Card>\r\n        <label htmlFor='student-name'>Name:</label>\r\n        <input id='student-name' type='text' ref={nameRef} required />\r\n      </Card>\r\n\r\n      <Card>\r\n        <label htmlFor='student-email'>Email:</label>\r\n        <input id='student-email' type='email' ref={emailRef} required />\r\n      </Card>\r\n\r\n      <Card>\r\n        <label htmlFor='student-description'>Description:</label>\r\n        <br />\r\n        <textarea\r\n          id='student-description'\r\n          rows='5'\r\n          ref={descriptionRef}\r\n          required\r\n        />\r\n      </Card>\r\n\r\n      <Card>\r\n        <label htmlFor='student-tags'>Tags:</label>\r\n        <input id='student-tags' type='text' ref={tagsRef} required />\r\n      </Card>\r\n\r\n      <Card>\r\n        <label htmlFor='student-subjects'>Subjects:</label>\r\n        <input id='student-subjects' type='text' ref={subjectsRef} required />\r\n      </Card>\r\n\r\n      <center>\r\n        <Button type='submit'>Add student</Button>\r\n      </center>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddStudent;\r\n","import classes from './Find.module.css';\r\n\r\nconst Find = (props) => {\r\n  return (\r\n    <select className={`${classes.find} ${props.className}`} name={props.name} required>\r\n      {props.options.map((opt, i) => (\r\n        <option key={props.name + '-select-' + i} value={i}>{opt}</option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default Find;\r\n","import React from \"react\";\r\nimport GroupMember from \"../Groups/GroupMember\";\r\nimport AddStudent from \"./AddStudent\";\r\nimport Find from \"../Find/Find\";\r\nimport Card from \"../UI/Card/Card\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport classes from './Add.module.css';\r\n\r\n\r\nclass AddGroup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Two-way binding for shits and giggles. I don't really need it. Refs are enough.\r\n    this.state = {\r\n      groupName: '',\r\n      description: '',\r\n      subject: '',\r\n\r\n      members: [],\r\n\r\n      role: '' \r\n    };\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { groupName, description, subject, members } = this.state;\r\n    const group = {\r\n      name: groupName,\r\n      description: description,\r\n      subject: subject,\r\n      members: members\r\n    };\r\n\r\n    if (members.length === 0) {\r\n      alert('Groups with no members are not allowed.');\r\n      return;\r\n    }\r\n\r\n    this.props.onNewGroup(group);\r\n  }\r\n\r\n\r\n  addMember = (student) => {\r\n    if (this.state.members.length >= 5) {\r\n      alert('Can\\'t add another member.');\r\n      return;\r\n    }\r\n\r\n    if (this.state.role.trim().length === 0) {\r\n      alert('A group member must have a role.');\r\n      return;\r\n    }\r\n\r\n    console.log(student);\r\n    console.log(this.state.members);\r\n\r\n    \r\n    this.setState(st => ({ members: [...st.members, { role: st.role, student: student }], role: '' }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={classes['add-group']} onSubmit={this.submitHandler}>\r\n          <center>\r\n            <Button>Create group</Button>\r\n          </center>\r\n\r\n          <Card>\r\n            <label htmlFor='group-name'>Name:</label>\r\n            <input id='group-name' type='text' value={this.state.groupName} onChange={(event) => this.setState({ groupName: event.target.value })} required />\r\n          </Card>\r\n\r\n          <Card>\r\n            <label htmlFor='group-description'>Description:</label>\r\n            <br />\r\n            <textarea\r\n              id='group-description'\r\n              rows='5'\r\n              value={this.state.description}\r\n              onChange={(event) => this.setState({ description: event.target.value })}\r\n              required\r\n            />\r\n          </Card>\r\n\r\n          <Card>\r\n            <label htmlFor='group-subject'>Subject:</label>\r\n            <input id='group-subject' type='text' value={this.state.subject} onChange={(event) => this.setState({ subject: event.target.value })} required />\r\n          </Card>\r\n\r\n          <Card className={classes['current-members']}>\r\n            <h2>Current students</h2>\r\n            {this.state.members.length === 0 ? <p>None</p> : null}\r\n            {this.state.members.map((sr, i) => <GroupMember student={sr.student} role={sr.role} key={'member-' + i} />)}\r\n          </Card>\r\n        </form>\r\n\r\n        <Card>\r\n          <h2>Add student to the group</h2>\r\n          <Card className={classes['select-student-type']}>\r\n            <label htmlFor='radio_existing'>Choose existing</label>\r\n            <input id='radio_existing' name='existingOrNew' type='radio' checked={this.state.addExisting} onChange={() => this.setState(st => ({ addExisting: true }))}  />\r\n\r\n            <label htmlFor='radio_new'>Create new</label>\r\n            <input id='radio_new' name='existingOrNew' type='radio' checked={!this.state.addExisting} onChange={() => this.setState(st => ({ addExisting: false }))} />\r\n          </Card>\r\n\r\n          <Card className={classes['select-role']}>\r\n            <label htmlFor='member-role'>Role:</label>\r\n            <input id='member-role' type='text' value={this.state.role} onChange={(event) => this.setState({ role: event.target.value })} required />\r\n          </Card>\r\n          \r\n          {\r\n            !this.state.addExisting\r\n            ? <AddStudent onNewStudent={this.addMember} />\r\n            : <form className={classes['find-student']} onSubmit={event => { event.preventDefault(); \r\n            this.addMember(this.props.students[+event.target.elements.selectedStudents.value]); }}>\r\n                <Find name='selectedStudents' options={this.props.students.filter(s => !this.state.members.map(sr => sr.student).includes(s)).map(s => `${s.name}: ${s.subjects}`)} />\r\n                <Button type='submit'>Add student</Button>\r\n              </form>\r\n          }\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddGroup;","import { useState } from 'react';\r\n\r\nimport AddGroup from './AddGroup';\r\nimport AddStudent from './AddStudent';\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Add.module.css';\r\n\r\n\r\nconst Add = (props) => {\r\n  const [selection, setSelection] = useState(props.selection ?? null);\r\n\r\n  let body = null;\r\n  if (selection === 'student')\r\n    body = (<AddStudent onNewStudent={props.onNewStudent} />);\r\n  else if (selection === 'group')\r\n    body = (<AddGroup onNewGroup={g => { alert(JSON.stringify(g)); props.onNewGroup(g); } } students={props.students} />);\r\n  \r\n\r\n  return (\r\n    <Card>\r\n      {/* Mothafucka is two-way bound. */}\r\n      <center className={classes.choice}>\r\n        <label htmlFor='radio_student'>Student</label>\r\n        <input id='radio_student' name='studentOrGroup' type='radio' checked={selection === 'student'} onChange={() => setSelection('student')}  />\r\n        \r\n        <label htmlFor='radio_group'>Group</label>\r\n        <input id='radio_group' name='studentOrGroup' type='radio' checked={selection === 'group'} onChange={() => setSelection('group')} />\r\n      </center>\r\n      {body}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import classes from './Popup.module.css';\r\nimport Card from '../UI/Card/Card';\r\n\r\nconst Message = ({ text }) => {\r\n  return <Card className={classes.popup}>{text}</Card>;\r\n}\r\n\r\nexport default Message;","import { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Message from  './Message';\r\n\r\n\r\n// This actuator thing is pretty bad :)\r\nconst Popup = ({ text, duration, show, onClear }) => {\r\n  useEffect(() => {\r\n    if (!show)\r\n      return;\r\n    \r\n    setTimeout(() => {\r\n      onClear();\r\n    }, duration);\r\n  }, [duration, show, onClear]);\r\n\r\n  return ReactDOM.createPortal(\r\n    show && <Message text={text} />, document.getElementById('popup-holder')\r\n  ); \r\n}\r\n\r\nexport default Popup;","import { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Student from '../Students/Student';\r\nimport Group from '../Groups/Group';\r\nimport Popup from '../Popup/Popup';\r\nimport classes from './SendMessage.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\n\r\nconst SendMessage = (props) => {\r\n  const { type, id } = useParams();\r\n  const [message, setMessage] = useState('');\r\n  const [popup, setPopup] = useState(false);\r\n\r\n  const sendMessage = (message) => {\r\n    setPopup(true);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    sendMessage(message);\r\n    setMessage('');\r\n  };\r\n\r\n  // Nice name.\r\n  let thing = null;\r\n  switch (type) {\r\n    case 'student':\r\n      thing = <Student student={props.students[+id]} />;\r\n      break;\r\n\r\n    case 'group':\r\n      thing = <Group group={props.groups[+id]} />;\r\n      break;\r\n\r\n    default:\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Popup text={`Message sent to ${type}.`} duration=\"2000\" show={popup} onClear={() => setPopup(false)}  />\r\n      <center>\r\n        <div>{thing}</div>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <textarea\r\n            id='group-description'\r\n            rows='5'\r\n            value={message}\r\n            onChange={(event) => {\r\n              setMessage(event.target.value);\r\n            }}\r\n            required\r\n            \r\n          />\r\n\r\n          <br></br>\r\n          <Button type='submit'>Send</Button>\r\n        </form>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","import React, { useState } from 'react';\n\nimport './App.css';\n\nimport StudentSearch from './components/Students/StudentSearch';\nimport GroupSearch from './components/Groups/GroupSearch';\nimport Navigation from './components/Navigation/Navigation';\nimport Add from './components/Add/Add';\nimport SendMessage from './components/SendMessage/SendMessage';\n\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\n\n\n/* \n  Note to self: embed IDs in the data in the future. \n  It makes things much easier, like *selecting* data and key generation (esp. in nested data like `group`). \n*/\nconst defaultStudents = [\n  {\n    name: 'bobby el dorade',\n    email: 'hotstud-ent@hotmail.ru',\n    description: 'some shitty description',\n    tags: ['retard'],\n    subjects: ['dupa'],\n  },\n  {\n    name: 'pissmeister',\n    email: 'grindset@binky.biz',\n    description: 'another one',\n    tags: ['dddd'],\n    subjects: ['asd'],\n  },\n];\n\nconst defaultGroups = [\n  {\n    name: 'gruppe sechs',\n\n    // Note: I assume these are not the same students as the ones searching for a group.\n    // So, these two lists should be completely disjointed **by definition**.\n    members: [{ student: defaultStudents[0], role: 'smoothster' }, { student: defaultStudents[1], role: 'serial killer' }],\n    description: 'suicide fun-cult, fun suicide cult',\n    subject: 'alchemy'\n  }\n];\n\n\n// Helps me store (((persistent))) data.\nconst useLocalItems = (storageName, defaults) => {\n  const [item, setItems] = useState(JSON.parse(localStorage.getItem(storageName)) ?? defaults);\n  const addItem = (item) => setItems(items => {\n    const newItems = [...items, item];\n\n    localStorage.setItem(storageName, JSON.stringify(newItems));\n    return newItems;\n  });\n\n  return [item, addItem];\n};\n\nfunction App() {\n  const navigate = useNavigate();\n  const [students, addStudent] = useLocalItems('students', defaultStudents);\n  const [groups, addGroup] = useLocalItems('groups', defaultGroups);\n\n  const thenRedirect = (f, to) => (arg) => {\n    f(arg);\n    navigate(to);\n  } \n\n  return (\n    <div className='App'>\n      <header>\n        <Navigation />\n      </header>\n\n      <main>\n        <Routes>\n          <Route path='/students' element={<StudentSearch elems={students} />} />\n          <Route path='/groups' element={<GroupSearch elems={groups} />} />\n          <Route path='/add' element={<Add onNewStudent={thenRedirect(addStudent, '/students')} onNewGroup={thenRedirect(addGroup, '/groups')} students={students} />} />\n          <Route path='/:type/:id/send' element={<SendMessage students={students} groups={groups} />} />\n\n          {/* Default \"site\" is the student search. */}\n          <Route exact path='/' element={<Navigate replace to='/students' />} />\n        </Routes>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter basename='/PIWbois/3/std-prjs/build/'>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"student-card\":\"Student_student-card__3PFtY\",\"student-entry\":\"Student_student-entry__2DRns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SendMessage_button__1HAUT\",\"form\":\"SendMessage_form__3-xvy\"};"],"sourceRoot":""}
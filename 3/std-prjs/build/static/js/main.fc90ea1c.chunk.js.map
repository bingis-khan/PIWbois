{"version":3,"sources":["components/Searchable/Display/Display.js","components/Searchable/Search/Search.js","components/Searchable/Searchable/Searchable.js","components/Students/Student.js","components/SendMessage/SendMessageButton.js","components/Students/StudentSearch.js","components/Groups/GroupMember.js","components/Groups/Group.js","components/Groups/GroupSearch.js","components/Navigation/Navigation.js","components/Add/AddStudent.js","components/Find/Find.js","components/Add/AddGroup.js","components/Add/Add.js","components/Popup/Message.js","components/Popup/Popup.js","components/SendMessage/SendMessage.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","elems","Search","id","shortid","generate","className","htmlFor","text","onChange","e","onFilterUpdate","target","value","trim","makeSearchable","prompt","filterElem","toComponent","useState","filter","setFilter","some","s","includes","map","Student","student","description","tags","subjects","SendMessageButton","to","type","studentAttributes","StudentSearch","i","GroupMember","role","Group","g","group","name","members","sr","si","subject","GroupSearch","flatMap","Navigation","AddStudent","useRef","nameRef","emailRef","descriptionRef","tagsRef","subjectsRef","onSubmit","event","preventDefault","current","email","split","console","log","onNewStudent","ref","required","rows","Find","options","opt","AddGroup","submitHandler","state","groupName","length","onNewGroup","alert","addMember","setState","st","this","checked","addExisting","students","elements","selectedStudents","React","Component","Add","selection","setSelection","body","JSON","stringify","Message","style","backgroundColor","Popup","duration","show","onClear","useEffect","setTimeout","ReactDOM","createPortal","document","getElementById","SendMessage","useParams","message","setMessage","popup","setPopup","thing","groups","defaultStudents","defaultGroups","useLocalItems","storageName","defaults","parse","localStorage","getItem","item","setItems","items","newItems","setItem","App","addStudent","addGroup","path","element","exact","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.fc90ea1c.chunk.js","sourcesContent":["\r\nconst Display = (props) => {\r\n  return (\r\n    <div>\r\n      {props.elems}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;","import shortid from 'short-id';\r\n\r\n\r\nconst Search = (props) => {\r\n  const id = shortid.generate();\r\n\r\n  return (<div className=\"search\">\r\n    <label htmlFor={id}>{props.text}</label>\r\n    <input id={id} onChange={e => props.onFilterUpdate(e.target.value.trim())}></input>\r\n  </div>);\r\n};\r\n\r\nexport default Search;","import { useState } from 'react';\r\n\r\nimport Display from './../Display/Display';\r\nimport Search from './../Search/Search';\r\n\r\n\r\n// props.elems : [elem]\r\n// props.filter : elem -> [String]\r\n// props.toComponent : elem -> Component\r\n// Ooh, nice higher-order component.\r\nconst makeSearchable = (prompt, filterElem, toComponent) => (props) => {\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const elems = props.elems.filter(e => filterElem(e).some(s => s.includes(filter))).map(toComponent);\r\n\r\n  return (\r\n    <div>\r\n      <Search text={prompt} onFilterUpdate={setFilter} />\r\n      <Display elems={elems} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default makeSearchable;","const Student = (props) => {\r\n  const s = props.student;\r\n  return (\r\n    <div className='profile'>\r\n      <p>{s.description}</p>\r\n      <p>{s.tags}</p>\r\n      <p>{s.subjects}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst SendMessageButton = (props) => {\r\n  return (\r\n    <Link to={`/${props.type}/${props.to}/send`}>\r\n      <button>Send message</button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default SendMessageButton;\r\n","\r\nimport makeSearchable from '../Searchable/Searchable/Searchable';\r\nimport Student from './Student';\r\nimport SendMessageButton from '../SendMessage/SendMessageButton';\r\n\r\nconst studentAttributes = s => [s.description, ...s.tags, ...s.subjects];\r\n\r\nconst StudentSearch = makeSearchable('Find students', studentAttributes, \r\n  (s, i) => \r\n    <div key={'student-' + i}>\r\n      <Student student={s} />\r\n      <SendMessageButton type='student' to={i} />\r\n    </div>);\r\n\r\n\r\nexport { studentAttributes };  // Also used in group search -> saves some time.\r\nexport default StudentSearch;","import Student from '../Students/Student';\r\n\r\n\r\nconst GroupMember = (props) => (\r\n  <div>\r\n    <h2>{props.role}</h2>\r\n    <Student student={props.student} />\r\n  </div>\r\n);\r\n\r\nexport default GroupMember;","import GroupMember from './GroupMember';\r\n\r\nconst Group = (props) => {\r\n  const g = props.group;\r\n  return (\r\n    <div className='profile'>\r\n      <p>{g.name}</p>\r\n      <p>{g.description}</p>\r\n      <div>\r\n        {g.members.map((sr, si) => (\r\n          <GroupMember\r\n            role={sr.role}\r\n            student={sr.student}\r\n            key={`group-${props.i}-student-${si}`}\r\n          />\r\n        ))}\r\n      </div>\r\n      <p>{g.subject}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import makeSearchable from '../Searchable/Searchable/Searchable';\r\nimport SendMessageButton from '../SendMessage/SendMessageButton';\r\nimport { studentAttributes } from '../Students/StudentSearch';\r\nimport Group from './Group';\r\n\r\nconst groupAttributes = (g) => [\r\n  g.name,\r\n  g.description,\r\n  g.subject,\r\n  ...g.members.flatMap((sr) => [sr.role, ...studentAttributes(sr.student)]),\r\n];\r\n\r\nconst GroupSearch = makeSearchable('Find groups:', groupAttributes, (g, i) => (\r\n  <div key={'group-' + i}>\r\n    <Group group={g} i={i} />\r\n    <SendMessageButton type='group' to={i} />\r\n  </div>\r\n));\r\n\r\nexport default GroupSearch;\r\n","\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to='/add'>\r\n            <button>Add Student/Group</button>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/students'>\r\n            <button>Students</button>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/groups'>\r\n            <button>Groups</button>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import { useRef } from 'react';\r\n\r\nconst AddStudent = (props) => {\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const student = {\r\n      name: nameRef.current.value,\r\n      email: emailRef.current.value,\r\n      description: descriptionRef.current.value,\r\n      tags: tagsRef.current.value.split(),\r\n      subjects: subjectsRef.current.value.split(),\r\n    };\r\n\r\n    console.log(student);\r\n\r\n    props.onNewStudent(student);\r\n  };\r\n\r\n  // Just **ref** it up. I forgot JS has \"limited\" options when it comes to list creation. Basically: traverse (const useRef) [1..5]\r\n  // We're not going to use state and this single source of truth thingy, becuase we don't need it - HTML validation is enough.\r\n  const [nameRef, emailRef, descriptionRef, tagsRef, subjectsRef] = [\r\n    useRef(),\r\n    useRef(),\r\n    useRef(),\r\n    useRef(),\r\n    useRef(),\r\n  ];\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <label htmlFor='student-name'>Name:</label>\r\n      <input id='student-name' type='text' ref={nameRef} required />\r\n\r\n      <label htmlFor='student-email'>Email:</label>\r\n      <input id='student-email' type='email' ref={emailRef} required />\r\n\r\n      <label htmlFor='student-description'>Description:</label>\r\n      <textarea\r\n        id='student-description'\r\n        rows='5'\r\n        ref={descriptionRef}\r\n        required\r\n      />\r\n\r\n      <label htmlFor='student-tags'>Tags:</label>\r\n      <input id='student-tags' type='text' ref={tagsRef} required />\r\n\r\n      <label htmlFor='student-subjects'>Subjects:</label>\r\n      <input id='student-subjects' type='text' ref={subjectsRef} required />\r\n\r\n      <button>Add the boi</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddStudent;\r\n","const Find = (props) => {\r\n  return (\r\n    <select name={props.name} required>\r\n      {props.options.map((opt, i) => (\r\n        <option key={props.name + '-select-' + i} value={i}>{opt}</option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default Find;\r\n","import React from \"react\";\r\nimport GroupMember from \"../Groups/GroupMember\";\r\nimport AddStudent from \"./AddStudent\";\r\nimport Find from \"../Find/Find\";\r\n\r\n\r\nclass AddGroup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Two-way binding for shits and giggles. I don't really need it. Refs are enough.\r\n    this.state = {\r\n      groupName: '',\r\n      description: '',\r\n      subject: '',\r\n\r\n      members: [],\r\n\r\n      role: '' \r\n    };\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { groupName, description, subject, members } = this.state;\r\n    const group = {\r\n      name: groupName,\r\n      description: description,\r\n      subject: subject,\r\n      members: members\r\n    };\r\n\r\n    if (members.length === 0) {\r\n      alert('Groups with no members are not allowed.');\r\n      return;\r\n    }\r\n\r\n    this.props.onNewGroup(group);\r\n  }\r\n\r\n\r\n  addMember = (student) => {\r\n    if (this.state.members.length >= 5) {\r\n      alert('Can\\'t add another member.');\r\n      return;\r\n    }\r\n\r\n    if (this.state.role.trim().length === 0) {\r\n      alert('No role selected.');\r\n      return;\r\n    }\r\n\r\n    console.log(student);\r\n    console.log(this.state.members);\r\n\r\n    \r\n    this.setState(st => ({ members: [...st.members, { role: st.role, student: student }], role: '' }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.submitHandler}>\r\n          <label htmlFor='group-name'>Name:</label>\r\n          <input id='group-name' type='text' value={this.state.groupName} onChange={(event) => this.setState({ groupName: event.target.value })} required />\r\n\r\n          <label htmlFor='group-description'>Description:</label>\r\n          <textarea\r\n            id='group-description'\r\n            rows='5'\r\n            value={this.state.description}\r\n            onChange={(event) => this.setState({ description: event.target.value })}\r\n            required\r\n          />\r\n\r\n          <label htmlFor='group-subject'>Subject:</label>\r\n          <input id='group-subject' type='text' value={this.state.subject} onChange={(event) => this.setState({ subject: event.target.value })} required />\r\n\r\n          <div>\r\n            <h2>Current students</h2>\r\n            {this.state.members.map((sr, i) => <GroupMember student={sr.student} role={sr.role} key={'member-' + i} />)}\r\n          </div>        \r\n\r\n          <button>Add the boi</button>\r\n        </form>\r\n\r\n        <div>\r\n          <label htmlFor='radio_existing'>Choose existing</label>\r\n          <input id='radio_existing' name='existingOrNew' type='radio' checked={this.state.addExisting} onChange={() => this.setState(st => ({ addExisting: true }))}  />\r\n\r\n          <label htmlFor='radio_new'>Create new</label>\r\n          <input id='radio_new' name='existingOrNew' type='radio' checked={!this.state.addExisting} onChange={() => this.setState(st => ({ addExisting: false }))} />\r\n\r\n          <label htmlFor='member-role'>Role:</label>\r\n          <input id='member-role' type='text' value={this.state.role} onChange={(event) => this.setState({ role: event.target.value })} required />\r\n          {\r\n            !this.state.addExisting\r\n            ? <AddStudent onNewStudent={this.addMember} />\r\n            : <form onSubmit={event => { event.preventDefault(); \r\n            this.addMember(this.props.students[+event.target.elements.selectedStudents.value]); }}>\r\n                <Find name='selectedStudents' options={this.props.students.filter(s => !this.state.members.map(sr => sr.student).includes(s)).map(s => `${s.name}: ${s.subjects}`)} />\r\n                <button>Add student</button>\r\n              </form>\r\n          }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddGroup;","import { useState } from 'react';\r\n\r\nimport AddGroup from './AddGroup';\r\nimport AddStudent from './AddStudent';\r\n\r\n\r\nconst Add = (props) => {\r\n  const [selection, setSelection] = useState(props.selection ?? null);\r\n\r\n  let body = null;\r\n  if (selection === 'student')\r\n    body = (<AddStudent onNewStudent={props.onNewStudent} />);\r\n  else if (selection === 'group')\r\n    body = (<AddGroup onNewGroup={g => { alert(JSON.stringify(g)); props.onNewGroup(g); } } students={props.students} />);\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {/* Mothafucka is two-way bound. */}\r\n      <label htmlFor='radio_student'>Student</label>\r\n      <input id='radio_student' name='studentOrGroup' type='radio' checked={selection === 'student'} onChange={() => setSelection('student')}  />\r\n\r\n      <label htmlFor='radio_group'>Group</label>\r\n      <input id='radio_group' name='studentOrGroup' type='radio' checked={selection === 'group'} onChange={() => setSelection('group')} />\r\n\r\n      {body}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","const Message = ({ text }) => {\r\n  return <div style={{ backgroundColor: 'red' }}>{text}</div>;\r\n}\r\n\r\nexport default Message;","import { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Message from  './Message';\r\n\r\n\r\n// This actuator thing is pretty bad :)\r\nconst Popup = ({ text, duration, show, onClear }) => {\r\n  useEffect(() => {\r\n    if (!show)\r\n      return;\r\n    \r\n    setTimeout(() => {\r\n      onClear();\r\n    }, duration);\r\n  }, [duration, show, onClear]);\r\n\r\n  return ReactDOM.createPortal(\r\n    show && <Message text={text} />, document.getElementById('popup-holder')\r\n  ); \r\n}\r\n\r\nexport default Popup;","import { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Student from '../Students/Student';\r\nimport Group from '../Groups/Group';\r\nimport Popup from '../Popup/Popup';\r\n\r\n\r\n\r\nconst SendMessage = (props) => {\r\n  const { type, id } = useParams();\r\n  const [message, setMessage] = useState('');\r\n  const [popup, setPopup] = useState(false);\r\n\r\n  const sendMessage = (message) => {\r\n    setPopup(true);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    sendMessage(message);\r\n  };\r\n\r\n  // Nice name.\r\n  let thing = null;\r\n  switch (type) {\r\n    case 'student':\r\n      thing = <Student student={props.students[+id]} />;\r\n      break;\r\n\r\n    case 'group':\r\n      thing = <Group group={props.groups[+id]} />;\r\n      break;\r\n\r\n    default:\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Popup text='OH SHIDDDD' duration=\"1000\" show={popup} onClear={() => setPopup(false)}  />\r\n      <div>{thing}</div>\r\n      <form onSubmit={onSubmit}>\r\n        <textarea\r\n          id='group-description'\r\n          rows='5'\r\n          value={message}\r\n          onChange={(event) => {\r\n            setMessage(event.target.value);\r\n          }}\r\n          required\r\n        />\r\n\r\n        <button>Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","import React, { useState } from 'react';\n\nimport './App.css';\n\nimport StudentSearch from './components/Students/StudentSearch';\nimport GroupSearch from './components/Groups/GroupSearch';\nimport Navigation from './components/Navigation/Navigation';\nimport Add from './components/Add/Add';\nimport SendMessage from './components/SendMessage/SendMessage';\n\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\n\n/* \n  Note to self: embed IDs in the data in the future. \n  It makes things much easier, like *selecting* data and key generation (esp. in nested data like `group`). \n*/\nconst defaultStudents = [\n  {\n    name: 'bobby el dorade',\n    email: 'hotstud-ent@hotmail.ru',\n    description: 'some shitty description',\n    tags: ['retard'],\n    subjects: ['dupa'],\n  },\n  {\n    name: 'pissmeister',\n    email: 'grindset@binky.biz',\n    description: 'another one',\n    tags: ['dddd'],\n    subjects: ['asd'],\n  },\n];\n\nconst defaultGroups = [\n  {\n    name: 'gruppe sechs',\n\n    // Note: I assume these are not the same students as the ones searching for a group.\n    // So, these two lists should be completely disjointed **by definition**.\n    members: [{ student: defaultStudents[0], role: 'smoothster' }, { student: defaultStudents[1], role: 'serial killer' }],\n    description: 'suicide fun-cult, fun suicide cult',\n    subject: 'alchemy'\n  }\n];\n\nconst useLocalItems = (storageName, defaults) => {\n  const [item, setItems] = useState(JSON.parse(localStorage.getItem(storageName)) ?? defaults);\n  const addItem = (item) => setItems(items => {\n    const newItems = [...items, item];\n\n    localStorage.setItem(storageName, JSON.stringify(newItems));\n    return newItems;\n  });\n\n  return [item, addItem];\n};\n\nfunction App() {\n  const [students, addStudent] = useLocalItems('students', defaultStudents);\n  const [groups, addGroup] = useLocalItems('groups', defaultGroups);\n\n  return (\n    <div className='App'>\n      <Navigation />\n\n      <Routes>\n        <Route path='/students' element={<StudentSearch elems={students} />} />\n        <Route path='/groups' element={<GroupSearch elems={groups} />} />\n        <Route path='/add' element={<Add onNewStudent={addStudent} onNewGroup={addGroup} students={students} />} />\n        <Route path='/:type/:id/send' element={<SendMessage students={students} groups={groups} />} />\n\n        {/* Default \"site\" is the student search. */}\n        <Route exact path='/' element={<Navigate replace to='/students' />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter basename='/PIWbois/3/std-prjs/build/'>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Searchable/Search/Search.module.css","components/UI/Card/Card.module.css","components/Searchable/Searchable/Searchable.module.css","components/UI/Button/Button.module.css","components/Navigation/Navigation.module.css","components/Find/Find.module.css","components/Popup/Popup.module.css","components/Searchable/Display/Display.js","components/UI/Card/Card.js","components/Searchable/Search/Search.js","components/Searchable/Searchable/Searchable.js","components/Students/Student.js","components/UI/Button/Button.js","components/SendMessage/SendMessageButton.js","Context.js","components/Follow/FollowButton.js","components/Profile/CheckProfileButton.js","components/UI/Button/LinkButton.js","components/Students/StudentSearch.js","components/Groups/GroupMember.js","components/Groups/Group.js","components/Groups/GroupSearch.js","firebase/init.js","firebase/users.js","components/Login/Login.js","components/Navigation/Navigation.js","Images.js","components/Add/AddStudent.js","components/Find/Find.js","components/Add/AddGroup.js","components/Add/Add.js","components/Popup/Message.js","components/Popup/Popup.js","components/SendMessage/SendMessage.js","components/Profile/Profile.js","components/Follow/Following.js","components/Add/Edit.js","App.js","reportWebVitals.js","index.js","components/Add/Add.module.css","components/Groups/Group.module.css","components/Students/Student.module.css","components/SendMessage/SendMessage.module.css"],"names":["module","exports","Display","props","elems","Card","className","classes","card","children","Search","id","shortid","generate","searchbox","htmlFor","text","onChange","e","onFilterUpdate","target","value","trim","makeSearchable","prompt","filterElem","toComponent","useState","filter","setFilter","display","map","i","some","s","includes","searchable","Student","student","img","src","name","description","tags","subjects","Button","type","button","onClick","disabled","SendMessageButton","to","User","createContext","user","setUser","users","addUser","follows","dispatch","refresh","FollowButton","ctx","useContext","groups","Error","students","has","who","in","do","CheckProfileButton","LinkButton","studentAttributes","extendedStudentCard","StudentSearch","GroupMember","role","Group","g","group","members","sr","si","subject","extendedGroupCard","GroupSearch","flatMap","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","getFirestore","auth","getAuth","googleProvider","GoogleAuthProvider","logInWithGoogle","a","signInWithPopup","response","q","doc","uid","getDoc","exists","setDoc","displayName","authProvider","email","console","error","err","alert","message","logout","signOut","Login","useAuthState","loading","useUpdateProfile","updateProfile","updating","updateError","loginError","setLoginError","usernameRef","useRef","passwordRef","page","onSubmit","event","preventDefault","submitType","nativeEvent","submitter","current","password","log","signInWithEmailAndPassword","catch","createUserWithEmailAndPassword","then","userData","ref","Navigation","nav","newImageURL","fetch","r","url","AddStudent","nameRef","emailRef","descriptionRef","tagsRef","subjectsRef","useEffect","proto","prototype","join","split","onNewStudent","finally","required","rows","Find","find","options","opt","AddGroup","submitHandler","state","groupName","length","onNewGroup","addMember","setState","st","p","this","checked","addExisting","elements","selectedStudents","React","Component","Add","selection","setSelection","body","choice","Message","popup","Popup","duration","show","onClear","setTimeout","ReactDOM","createPortal","document","getElementById","SendMessage","useParams","setMessage","setPopup","thing","form","autoFocus","Profile","Following","Edit","params","arrId","which","onStudentEdit","onGroupEdit","useLocalItems","storageName","defaults","JSON","parse","localStorage","getItem","item","setItems","items","newItems","setItem","stringify","followReducer","action","followSet","stc","Set","add","delete","App","navigate","useNavigate","setStudents","setGroups","addGroup","addDoc","collection","dr","gs","editStudent","noUIDStudent","updateDoc","ss","newSS","editGroup","noUIDGroup","newGS","currentUserArr","setUsers","currentUser","useReducer","setRefresh","forceRefresh","userContext","useMemo","thenRedirect","f","fetchStudents","getDocs","qs","forEach","dd","push","data","Promise","all","studentsWithPic","fetchGroups","Provider","path","element","exact","replace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.573d7470.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbox\":\"Search_searchbox__naNQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1te4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchable\":\"Searchable_searchable__1PYbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__INfuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"Find_find__26ki8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__3TSql\"};","\nconst Display = (props) => {\n  return (\n    <div>\n      {props.elems}\n    </div>\n  );\n};\n\nexport default Display;","import classes from './Card.module.css';\n\nconst Card = (props) => (\n  <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n);\n\nexport default Card;\n","import shortid from 'short-id';\nimport classes from './Search.module.css';\nimport Card from '../../UI/Card/Card';\n\nconst Search = (props) => {\n  const id = shortid.generate();\n\n  return (\n    <Card className={classes.searchbox}>\n      <label htmlFor={id}>{props.text}</label>\n      <input\n        id={id}\n        onChange={(e) => props.onFilterUpdate(e.target.value.trim())}\n      ></input>\n    </Card>\n  );\n};\n\nexport default Search;\n","import { useState } from 'react';\n\nimport Display from './../Display/Display';\nimport Search from './../Search/Search';\nimport Card from '../../UI/Card/Card';\nimport classes from './Searchable.module.css';\n\n\n// props.elems : [elem]\n// props.filter : elem -> [String]\n// props.toComponent : elem -> Component\n// Ooh, nice higher-order component.\nconst makeSearchable = (prompt, filterElem, toComponent) => (props) => {\n  const [filter, setFilter] = useState('');\n\n  // Fixed: during search, indexes would not match the given list and sending a message would redirect to another list.\n  // Extremely bad fix for not having IDs in a datatype.\n  let display = <p>Loading...</p>\n\n  if (props.elems) {\n    const elems = props.elems.map((e, i) => [e, i]).filter(([e]) => filterElem(e).some(s => s.includes(filter))).map(([e, i]) => toComponent(e, i));\n    display = <Display elems={elems} />\n  }\n\n  return (\n    <Card className={classes.searchable}>\n      <Search text={prompt} onFilterUpdate={setFilter} />\n      {display}\n    </Card>\n  );\n}\n\nexport default makeSearchable;","\nimport Card from '../UI/Card/Card';\nimport classes from './Student.module.css';\n\nconst Student = (props) => {\n  const s = props.student;\n\n  const img = s.img\n    ? <img src={s.img}></img>\n    : null;\n\n  return (\n    <Card className={classes['student-card']} >\n      <h2>{s.name}</h2>\n      <p>{s.description}</p>\n      <p>Tags: {s.tags}</p>\n      <p>Subjects: {s.subjects}</p>\n      {img}\n    </Card>\n  );\n};\n\nexport default Student;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n\n      name={props.name ?? ''}\n      value={props.value ?? ''}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { Link } from \"react-router-dom\";\nimport Button from \"../UI/Button/Button\";\nimport classes from './SendMessage.module.css';\n\nconst SendMessageButton = (props) => {\n  return (\n    <Link to={`/${props.type}/${props.to}/send`}>\n      <Button className={`${classes.button} ${props.className}`}></Button>\n    </Link>\n  );\n};\n\nexport default SendMessageButton;\n","import { createContext } from \"react\";\n\n// User & context stuff.\nconst User = createContext({\n    user: null,\n    setUser: () => { },\n\n    // Kinda bad (also misleading context name), but whatever.\n    users: [],\n    addUser: () => { },\n\n    // Oh god, there's more.\n    follows: {},\n    dispatch: () => {},\n\n    refresh: () => {}\n});\n\nexport default User;","import { useContext } from 'react';\nimport User from '../../Context';\nimport Button from '../UI/Button/Button';\n\n\nconst FollowButton = (props) => {\n    const ctx = useContext(User);\n\n    let follows;\n    if (props.type === 'group')\n        follows = ctx.follows.groups;\n    else if (props.type === 'student')\n        follows = ctx.follows.students;\n    else\n        throw new Error('Invalid type');\n\n    const isFollowing = follows.has(props.who);\n    const follow = () => {\n        ctx.dispatch({ in: props.type, do: 'add', value: props.who });\n    }\n\n    const unfollow = () => {\n        ctx.dispatch({ in: props.type, do: 'remove', value: props.who });\n    }\n\n    return isFollowing\n        ? <Button onClick={unfollow}>Unfollow</Button>\n        : <Button onClick={follow}>Follow</Button> \n};\n\nexport default FollowButton;","import Button from \"../UI/Button/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst CheckProfileButton = (props) =>\n    <Link to={`/${props.to}/profile`}>\n        <Button>Check profile</Button>\n    </Link>;\n\nexport default CheckProfileButton;","import { Link } from \"react-router-dom\";\nimport Button from \"./Button\";\n\nconst LinkButton = (props) => {\n  return (\n    <Link to={props.to}>\n      <Button>{props.text}</Button>\n    </Link>\n  );\n};\n\nexport default LinkButton;\n","\nimport makeSearchable from '../Searchable/Searchable/Searchable';\nimport Student from './Student';\nimport SendMessageButton from '../SendMessage/SendMessageButton';\nimport Card from '../UI/Card/Card';\nimport classes from './Student.module.css';\nimport FollowButton from '../Follow/FollowButton';\nimport CheckProfileButton from '../Profile/CheckProfileButton';\nimport LinkButton from '../UI/Button/LinkButton';\n\nconst studentAttributes = s => [s.description, ...s.tags, ...s.subjects];\n\nconst extendedStudentCard = (s, i) =>\n  <Card className={classes['student-entry']} key={'student-' + i}>\n    <Student student={s} />\n    <SendMessageButton type='student' to={i} />\n    <FollowButton type='student' who={s.name} />\n    <CheckProfileButton to={i} />\n    <LinkButton to={`/edit/student/${i}`} text='Edit' />\n  </Card>;\n\nconst StudentSearch = makeSearchable('Find students', studentAttributes, extendedStudentCard);\n\n\nexport { studentAttributes, extendedStudentCard };  // Also used in group search -> saves some time.\nexport default StudentSearch;\n","import Student from '../Students/Student';\nimport Card from '../UI/Card/Card';\nimport classes from './Group.module.css';\n\nconst GroupMember = (props) => (\n  <Card className={classes['group-member']}>\n    <h2>Role: {props.role}</h2>\n    <Student student={props.student} />\n  </Card>\n);\n\nexport default GroupMember;","import GroupMember from './GroupMember';\nimport Card from '../UI/Card/Card';\n\nimport classes from './Group.module.css';\n\nconst Group = (props) => {\n  const g = props.group;\n  return (\n    <Card className={classes['group-card']}>\n      <h1>Group: {g.name}</h1>\n      <Card>\n        <p>{g.description}</p>\n      </Card>\n      <Card>\n        <h2>Members</h2>\n        {g.members.map((sr, si) => (\n          <GroupMember\n            role={sr.role}\n            student={sr.student}\n            key={`group-${props.i}-student-${si}`}\n          />\n        ))}\n      </Card>\n      <Card>\n      <h2>Subject</h2>\n      <p>{g.subject}</p>\n      </Card>\n    </Card>\n  );\n};\n\nexport default Group;\n","import makeSearchable from '../Searchable/Searchable/Searchable';\nimport SendMessageButton from '../SendMessage/SendMessageButton';\nimport { studentAttributes } from '../Students/StudentSearch';\nimport Group from './Group';\nimport Card from '../UI/Card/Card';\nimport classes from './Group.module.css';\nimport FollowButton from '../Follow/FollowButton';\nimport LinkButton from '../UI/Button/LinkButton';\n\n\nconst groupAttributes = (g) => [\n  g.name,\n  g.description,\n  g.subject,\n  ...g.members.flatMap((sr) => [sr.role, ...studentAttributes(sr.student)]),\n];\n\nconst extendedGroupCard = (g, i) =>\n  <Card key={'group-' + i} className={classes['group-entry']}>\n    <Group group={g} i={i} />\n    <SendMessageButton className={classes['send-message-button']} type='group' to={i} />\n    <FollowButton type='group' who={g.name} />\n    <LinkButton to={`/edit/group/${i}`} text='Edit' />\n  </Card>\n\nconst GroupSearch = makeSearchable('Find groups:', groupAttributes, extendedGroupCard);\n\n\nexport { extendedGroupCard };\nexport default GroupSearch;\n","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCK1KZvmu5wseA1Tx1CqswgP-Hct_JRmU0\",\n  authDomain: \"cool-piw-project.firebaseapp.com\",\n  projectId: \"cool-piw-project\",\n  storageBucket: \"cool-piw-project.appspot.com\",\n  messagingSenderId: \"548158819330\",\n  appId: \"1:548158819330:web:6f31cf7ccbf3c688db2b1b\"\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const firestore = getFirestore(app);\nexport const auth = getAuth(app);","import { auth, firestore } from \"./init\";\nimport {\n    GoogleAuthProvider,\n    signInWithPopup,\n    signOut,\n} from \"firebase/auth\";\nimport {\n    setDoc,\n    getDoc,\n    doc,\n} from \"firebase/firestore\";\n\nconst googleProvider = new GoogleAuthProvider();\n\n// Do that adding a user to the \"users\" database when registering.\n// It's not yet needed (accounts are different than user ).\n//export const addToUsers = async ()\n\n// Copied verbatim from \"tha source\". \nexport const logInWithGoogle = async () => {\n    try {\n        const response = await signInWithPopup(auth, googleProvider);\n        const user = response.user;\n\n        const q = doc(firestore, \"users\", user.uid);\n        const docs = await getDoc(q);\n\n        // We update the existing user if he signed it with a google account.\n        if (!docs.exists()) {\n\n            await setDoc(q, {\n                name: user.displayName,\n                authProvider: \"google\",\n                email: user.email\n            });\n        }\n\n    } catch (err) {\n        console.error({err});\n        alert(err.message);\n    }\n};\n\n\nexport const logout = () => {\n    signOut(auth);\n};\n","import { useContext, useRef, useState } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport Button from '../UI/Button/Button';\nimport User from '../../Context';\nimport { logInWithGoogle, logout } from '../../firebase/users';\nimport { useAuthState, useUpdateProfile } from 'react-firebase-hooks/auth';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, reload } from 'firebase/auth';\nimport { auth } from '../../firebase/init';\n\n\n// Named \"Login\", but actually Login + Register.\nconst Login = () => {\n    const [user, loading, error] = useAuthState(auth);\n    const [updateProfile, updating, updateError] = useUpdateProfile(auth);\n\n    const refresh = useContext(User).refresh;\n\n    const [loginError, setLoginError] = useState(null);\n\n    const usernameRef = useRef();\n    const passwordRef = useRef();\n\n    const onLogin = (event) => {\n        event.preventDefault();\n\n        // Magick.\n        const submitType = event.nativeEvent.submitter.value;\n        const email = usernameRef.current.value;\n        const password = passwordRef.current.value;\n\n        console.log(submitType);\n\n        // Very, and I mean *VERY* simple login.\n        switch (submitType) {\n            case 'login': {\n                signInWithEmailAndPassword(auth, email, password).catch(error => {\n                    setLoginError(error);\n                });\n                break;\n            }\n\n            case 'register': {\n                createUserWithEmailAndPassword(auth, email, password).then(userData => {\n                    // update profile does not seem to refresh user.\n                    // A, gówno, tu my idziemy znów.\n                    // I'll fix it later. \n                    updateProfile({\n                        displayName: userData.user.email\n                    }).then(() => {\n\n                        // I hate myself, but it works. It should be done automatically.\n                        // I guess a new contrib. idea. Cool.\n                        refresh();\n                    });\n                }).catch(error => {\n                    setLoginError(error);\n                });\n                break;\n            }\n\n            case 'google': {\n                logInWithGoogle();\n                break;\n            }\n\n            default:\n        }\n    }\n\n    if (loading || updating)\n        return\n            <Card>\n                <p>Loadin'</p>\n            </Card> \n        ;\n    \n    if (error || updateError)\n        return\n            <Card>\n                <p>Error: {error || updateError}</p>\n            </Card>\n        ;\n\n    let page = user\n        ? <Card>\n            <p>Logged in as {user.email}.</p>\n            <Button onClick={logout}>Logout</Button>\n          </Card>\n        : <Card>\n            <form onSubmit={onLogin}>\n                <input ref={usernameRef} type='text'></input>\n                <br />\n                <input ref={passwordRef} id='login-password' type='password'></input>\n                <br />\n                <Button type='submit' name='action' value='login' >Login</Button>\n                <Button type='submit' name='action' value='register' >Register</Button>\n                <Button type='submit' name='action' value='google'>Login with G00ble</Button>\n\n                {loginError && <p>WTF: {loginError.message}</p>}\n            </form>\n        </Card>\n\n    return page;\n};\n\nexport default Login;","\nimport { Link } from 'react-router-dom';\nimport classes from './Navigation.module.css';\nimport Card from '../UI/Card/Card';\nimport User from '../../Context';\nimport { auth } from '../../firebase/init';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport Login from '../Login/Login';\n\n\nconst Navigation = () => {\n  const [user, loading, error] = useAuthState(auth);\n\n  return (\n    <nav className={classes.nav}>\n      <Card>\n        <ul>\n          <li>\n            <Link to='/add'>\n              <button>Add Student/Group</button>\n            </Link>\n          </li>\n          <li>\n            <Link to='/students'>\n              <button>Students</button>\n            </Link>\n          </li>\n          <li>\n            <Link to='/groups'>\n              <button>Groups</button>\n            </Link>\n          </li>\n          <li>\n            {(() => {\n              if (loading)\n                return <p>????</p>;\n              if (error)\n                return <p>Error gettin' auth state: {error}</p>;\n\n              return <Link to='/login'><button>{user ? user.displayName : 'Login'}</button></Link>\n            })()}\n          </li>\n          <li>\n            <Link to='/following'>\n              <button>Following</button>\n            </Link>\n          </li>\n        </ul>\n      </Card>\n    </nav>\n  );\n};\n\nexport default Navigation;","\nexport const newImageURL = async () => \n    await fetch('https://picsum.photos/70/100').then(r => r.url);","import { useRef, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport Button from '../UI/Button/Button';\nimport classes from './Add.module.css';\nimport { newImageURL } from '../../Images';\n\nconst AddStudent = (props) => {\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const student = {\n      name: nameRef.current.value,\n      email: emailRef.current.value,\n      description: descriptionRef.current.value,\n      tags: tagsRef.current.value.split(),\n      subjects: subjectsRef.current.value.split(),\n      img: null,\n    };\n\n    if (props.prototype) {\n      student.uid = props.prototype.uid;\n      student.img = props.prototype.img;\n\n      console.log(student);\n      props.onNewStudent(student);\n      return;\n    }\n\n    // Async URL-fetchin'\n    newImageURL().then(url => {\n      student.img = url;\n    }).finally(() => {\n      console.log(student);\n      props.onNewStudent(student);\n    });\n  };\n\n  // Just **ref** it up. I forgot JS has \"limited\" options when it comes to list creation. Basically: traverse (const useRef) [1..5]\n  // We're not going to use state and this single source of truth thingy, becuase we don't need it - HTML validation is enough.\n  const [nameRef, emailRef, descriptionRef, tagsRef, subjectsRef] = [\n    useRef(),\n    useRef(),\n    useRef(),\n    useRef(),\n    useRef(),\n  ];\n\n  useEffect(() => {\n    const proto = props.prototype;\n    if (!proto) \n      return;\n    \n    // wtf\n    nameRef.current.value = proto.name;\n    emailRef.current.value = proto.email;\n    descriptionRef.current.value = proto.description;\n    tagsRef.current.value = proto.tags.join(' ');\n    subjectsRef.current.value = proto.subjects.join(' ');\n  }, [props.prototype]);\n\n  // I would have abstracted the label-input pair to a different element called Input,\n  // but I'm *really* short on time.\n  return (\n    <form className={classes['add-student']} onSubmit={submitHandler}>\n      <Card>\n        <label htmlFor='student-name'>Name:</label>\n        <input id='student-name' type='text' ref={nameRef} required />\n      </Card>\n\n      <Card>\n        <label htmlFor='student-email'>Email:</label>\n        <input id='student-email' type='email' ref={emailRef} required />\n      </Card>\n\n      <Card>\n        <label htmlFor='student-description'>Description:</label>\n        <br />\n        <textarea\n          id='student-description'\n          rows='5'\n          ref={descriptionRef}\n          required\n        />\n      </Card>\n\n      <Card>\n        <label htmlFor='student-tags'>Tags:</label>\n        <input id='student-tags' type='text' ref={tagsRef} required />\n      </Card>\n\n      <Card>\n        <label htmlFor='student-subjects'>Subjects:</label>\n        <input id='student-subjects' type='text' ref={subjectsRef} required />\n      </Card>\n\n      <center>\n        <Button type='submit'>{props.text ?? 'Add Student'}</Button>\n      </center>\n    </form>\n  );\n};\n\nexport default AddStudent;\n","import classes from './Find.module.css';\n\nconst Find = (props) => {\n  return (\n    <select className={`${classes.find} ${props.className}`} name={props.name} required>\n      {props.options.map((opt, i) => (\n        <option key={props.name + '-select-' + i} value={i}>{opt}</option>\n      ))}\n    </select>\n  );\n};\n\nexport default Find;\n","import React from \"react\";\nimport GroupMember from \"../Groups/GroupMember\";\nimport AddStudent from \"./AddStudent\";\nimport Find from \"../Find/Find\";\nimport Card from \"../UI/Card/Card\";\nimport Button from \"../UI/Button/Button\";\nimport classes from './Add.module.css';\n\n\nclass AddGroup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Two-way binding for shits and giggles. I don't really need it. Refs are enough.\n    this.state = {\n      groupName: '',\n      description: '',\n      subject: '',\n\n      members: [],\n\n      role: '' \n    };\n\n    if (props.prototype) {\n      const p = props.prototype;\n      this.state = {\n        uid: p.uid,\n        groupName: p.name,\n        description: p.description,\n        subject: p.subject,\n\n        members: p.members,\n\n        role: ''\n      };\n    }\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    const { groupName, description, subject, members } = this.state;\n    const group = {\n      name: groupName,\n      description: description,\n      subject: subject,\n      members: members\n    };\n\n    if (this.state.uid)\n      group.uid = this.state.uid;\n\n    if (members.length === 0) {\n      alert('Groups with no members are not allowed.');\n      return;\n    }\n\n    this.props.onNewGroup(group);\n  }\n\n\n  addMember = (student) => {\n    if (this.state.members.length >= 5) {\n      alert('Can\\'t add another member.');\n      return;\n    }\n\n    if (this.state.role.trim().length === 0) {\n      alert('A group member must have a role.');\n      return;\n    }\n\n    console.log(student);\n    console.log(this.state.members);\n\n    \n    this.setState(st => ({ members: [...st.members, { role: st.role, student: student }], role: '' }));\n  }\n\n  render() {\n    return (\n      <>\n        <form className={classes['add-group']} onSubmit={this.submitHandler}>\n          <center>\n            <Button type='submit'>{this.props.text ?? 'Create group'}</Button>\n          </center>\n\n          <Card>\n            <label htmlFor='group-name'>Name:</label>\n            <input id='group-name' type='text' value={this.state.groupName} onChange={(event) => this.setState({ groupName: event.target.value })} required />\n          </Card>\n\n          <Card>\n            <label htmlFor='group-description'>Description:</label>\n            <br />\n            <textarea\n              id='group-description'\n              rows='5'\n              value={this.state.description}\n              onChange={(event) => this.setState({ description: event.target.value })}\n              required\n            />\n          </Card>\n\n          <Card>\n            <label htmlFor='group-subject'>Subject:</label>\n            <input id='group-subject' type='text' value={this.state.subject} onChange={(event) => this.setState({ subject: event.target.value })} required />\n          </Card>\n\n          <Card className={classes['current-members']}>\n            <h2>Current students</h2>\n            {this.state.members.length === 0 ? <p>None</p> : null}\n            {this.state.members.map((sr, i) => <GroupMember student={sr.student} role={sr.role} key={'member-' + i} />)}\n          </Card>\n        </form>\n\n        <Card>\n          <h2>Add student to the group</h2>\n          <Card className={classes['select-student-type']}>\n            <label htmlFor='radio_existing'>Choose existing</label>\n            <input id='radio_existing' name='existingOrNew' type='radio' checked={this.state.addExisting} onChange={() => this.setState(st => ({ addExisting: true }))}  />\n\n            <label htmlFor='radio_new'>Create new</label>\n            <input id='radio_new' name='existingOrNew' type='radio' checked={!this.state.addExisting} onChange={() => this.setState(st => ({ addExisting: false }))} />\n          </Card>\n\n          <Card className={classes['select-role']}>\n            <label htmlFor='member-role'>Role:</label>\n            <input id='member-role' type='text' value={this.state.role} onChange={(event) => this.setState({ role: event.target.value })} required />\n          </Card>\n          \n          {\n            !this.state.addExisting\n            ? <AddStudent onNewStudent={this.addMember} />\n            : <form className={classes['find-student']} onSubmit={event => { event.preventDefault(); \n            this.addMember(this.props.students[+event.target.elements.selectedStudents.value]); }}>\n                <Find name='selectedStudents' options={this.props.students.filter(s => !this.state.members.map(sr => sr.student).includes(s)).map(s => `${s.name}: ${s.subjects}`)} />\n                <Button type='submit'>Add student</Button>\n              </form>\n          }\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default AddGroup;\n","import { useState } from 'react';\n\nimport AddGroup from './AddGroup';\nimport AddStudent from './AddStudent';\nimport Card from '../UI/Card/Card';\nimport classes from './Add.module.css';\n\n\nconst Add = (props) => {\n  const [selection, setSelection] = useState(props.selection ?? null);\n\n  let body = null;\n  if (selection === 'student')\n    body = (<AddStudent prototype={props.prototype} onNewStudent={props.onNewStudent} />);\n  else if (selection === 'group')\n    body = (<AddGroup prototype={props.prototype} onNewGroup={props.onNewGroup} students={props.students} />);\n  \n  return (\n    <Card>\n      {/* Mothafucka is two-way bound. */}\n      <center className={classes.choice}>\n        <label htmlFor='radio_student'>Student</label>\n        <input id='radio_student' name='studentOrGroup' type='radio' checked={selection === 'student'} onChange={() => setSelection('student')}  />\n        \n        <label htmlFor='radio_group'>Group</label>\n        <input id='radio_group' name='studentOrGroup' type='radio' checked={selection === 'group'} onChange={() => setSelection('group')} />\n      </center>\n      {body}\n    </Card>\n  );\n};\n\nexport default Add;\n","import classes from './Popup.module.css';\nimport Card from '../UI/Card/Card';\n\nconst Message = ({ text }) => {\n  return <Card className={classes.popup}>{text}</Card>;\n}\n\nexport default Message;","import { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Message from  './Message';\n\n\n// This actuator thing is pretty bad :)\nconst Popup = ({ text, duration, show, onClear }) => {\n  useEffect(() => {\n    if (!show)\n      return;\n    \n    setTimeout(() => {\n      onClear();\n    }, duration);\n  }, [duration, show, onClear]);\n\n  return ReactDOM.createPortal(\n    show && <Message text={text} />, document.getElementById('popup-holder')\n  ); \n}\n\nexport default Popup;","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Student from '../Students/Student';\nimport Group from '../Groups/Group';\nimport Popup from '../Popup/Popup';\nimport classes from './SendMessage.module.css';\nimport Button from '../UI/Button/Button';\n\n\nconst SendMessage = (props) => {\n  const { type, id } = useParams();\n  const [message, setMessage] = useState('');\n  const [popup, setPopup] = useState(false);\n\n  const sendMessage = (message) => {\n    setPopup(true);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    sendMessage(message);\n    setMessage('');\n  };\n\n  // Nice name.\n  let thing = null;\n  switch (type) {\n    case 'student':\n      thing = <Student student={props.students[+id]} />;\n      break;\n\n    case 'group':\n      thing = <Group group={props.groups[+id]} />;\n      break;\n\n    default:\n  }\n\n  return (\n    <div>\n      <Popup text={`Message sent to ${type}.`} duration=\"2000\" show={popup} onClear={() => setPopup(false)}  />\n      <center>\n        <div>{thing}</div>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <textarea\n            id='group-description'\n            rows='5'\n            value={message}\n            onChange={(event) => {\n              setMessage(event.target.value);\n            }}\n            required\n            autoFocus\n          />\n\n          <br></br>\n          <Button type='submit'>Send</Button>\n        </form>\n      </center>\n    </div>\n  );\n};\n\nexport default SendMessage;\n","import Student from \"../Students/Student\";\nimport { useParams } from \"react-router-dom\";\n\n\nconst Profile = (props) => {\n    const { id } = useParams();\n\n    const student = props.students[id];\n\n    return !student\n        ? <p>Invalid ID.</p>\n        : <center><Student student={student} /></center>\n};\n\nexport default Profile;","import Card from \"../UI/Card/Card\";\nimport { extendedStudentCard } from \"../Students/StudentSearch\";\nimport { extendedGroupCard } from \"../Groups/GroupSearch\";\n\nconst Following = (props) =>\n    <>\n        <Card>\n            <h1>Students</h1>\n            {props.students.map(extendedStudentCard)}\n        </Card>\n        <Card>\n            <h1>Groups</h1>\n            {props.groups.map(extendedGroupCard)}\n        </Card>\n    </>;\n\nexport default Following;","import { useParams } from \"react-router-dom\";\nimport AddGroup from \"./AddGroup\";\nimport AddStudent from \"./AddStudent\";\n\nconst Edit = (props) => {\n    const params = useParams();\n    const arrId = params.id;\n    const which = params.type;\n    \n    const onStudentEdit = (student) => props.onStudentEdit(student, arrId);\n    const onGroupEdit = (group) => props.onGroupEdit(group, arrId);\n\n    return (   \n        which === 'student' && <AddStudent text={'Edit Student'} prototype={props.students[arrId]} onNewStudent={onStudentEdit}/>\n    ||  which === 'group' && <AddGroup text={'Edit Group'} prototype={props.groups[arrId]} onNewGroup={onGroupEdit} students={props.students} />\n    ||  <p>wtf</p>\n    );\n};\n\nexport default Edit;\n","import React, { useEffect, useState, useMemo, useReducer } from 'react';\n\nimport './App.css';\n\nimport StudentSearch from './components/Students/StudentSearch';\nimport GroupSearch from './components/Groups/GroupSearch';\nimport Navigation from './components/Navigation/Navigation';\nimport Add from './components/Add/Add';\nimport SendMessage from './components/SendMessage/SendMessage';\nimport Login from './components/Login/Login';\nimport User from './Context';\nimport { newImageURL } from './Images';\nimport Profile from './components/Profile/Profile';\nimport Following from './components/Follow/Following';\nimport Edit from './components/Add/Edit';\n\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\n\nimport { firestore } from './firebase/init';\nimport { collection, addDoc, getDocs, doc, updateDoc } from 'firebase/firestore';\n\n\n// Kinda bad - we can't really check the *real* base URL, so this\n// constant mitigates it.\nconst baseURL = '/PIWbois/6/std-prjs/build';\n\n\n// Helps me store (((persistent))) data.\nconst useLocalItems = (storageName, defaults) => {\n  const [item, setItems] = useState(JSON.parse(localStorage.getItem(storageName)) ?? defaults);\n  const addItem = (item) => setItems(items => {\n    const newItems = [...items, item];\n\n    localStorage.setItem(storageName, JSON.stringify(newItems));\n    return newItems;\n  });\n\n  const newSetItems = (items) => {\n    setItems(items);\n    localStorage.setItem(storageName, JSON.stringify(items));\n  };\n\n  return [item, addItem, newSetItems];\n};\n\nconst followReducer = (state, action) => {\n  let stc = { students: new Set(state.students), groups: new Set(state.groups) }\n\n  let followSet;\n  switch (action.in) {\n    case 'student':\n      followSet = stc.students;\n      break;\n\n    case 'group':\n      followSet = stc.groups;\n      break;\n\n    default:\n      throw new Error(`Invalid dispatch type ${action.in}.`);\n  }\n\n  switch (action.do) {\n    case 'add':\n      followSet.add(action.value);\n      break;\n\n    case 'remove':\n      followSet.delete(action.value);\n      break;\n\n    default:\n      throw new Error(`Invalid action ${action.do}.`);\n  }\n\n  return stc;\n}\n\n\n\nfunction App() {\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [groups, setGroups] = useState([]);\n\n  const addStudent = (student) => {\n    try {\n      addDoc(collection(firestore, 'students'), student).then(dr => setStudents(ss => [{ uid: dr.id, ...student }, ...ss]));\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const addGroup = async (group) => {\n    try {\n      await addDoc(collection(firestore, 'groups'), group).then(dr => setGroups(gs => [{ uid: dr.id, ...group }, ...gs]));\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  const editStudent = async (student, i) => {\n    const { uid, ...noUIDStudent } = student;\n\n    console.log('edit student', uid, noUIDStudent);\n    \n    try {\n      const q = doc(firestore, \"students\", student.uid);\n      \n      await updateDoc(q, noUIDStudent).then(() => setStudents(ss => {\n        const newSS = [...ss];\n        newSS[i] = student;\n\n        return newSS;\n      }));\n    } catch (err) {\n\n      // Most likely insufficient permissions.\n      alert(err);\n    }\n  }\n\n  const editGroup = async (group, i) => {\n    const { uid, ...noUIDGroup } = group;\n\n    console.log('edit group', uid, noUIDGroup);\n    \n    try {\n      const q = doc(firestore, \"groups\", group.uid);\n      \n      await updateDoc(q, noUIDGroup).then(() => setGroups(gs => {\n        const newGS = [...gs];\n        newGS[i] = group;\n\n        return newGS;\n      }));\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  // User.\n  const [currentUserArr, , setUsers] = useLocalItems('currentUser', []);\n  const [users, addUser] = useLocalItems('users', []);\n\n  const setUser = (user) => setUsers([user]);\n  const currentUser = currentUserArr[0] ?? null;\n  console.log(currentUser);\n\n  // We use a global follow list, because... I'm just tired, man.\n  const [follows, dispatch] = useReducer(followReducer, { students: new Set(), groups: new Set() });\n\n  // I hate myself.\n  const [, setRefresh] = useState(false);\n  const forceRefresh = () => setRefresh((s) => !s);\n\n  const userContext = useMemo(\n    () => ({ currentUser, setUser, users, addUser, follows, dispatch, refresh: forceRefresh }),\n    [currentUser, users, follows]\n  );\n\n  const thenRedirect = (f, to) => (...args) => {\n    f(...args);\n    navigate(to);\n  }\n\n  // Fetch \"external\" data.\n  const fetchJSON = async (filename) => {\n    try {\n      const response = await fetch(`${baseURL}/data/${filename}`);\n\n      return response.ok\n        ? await response.json()\n        : null;\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  useEffect(() => {\n    const fetchStudents = async () => {\n      const qs = await getDocs(collection(firestore, 'students'));\n      const students = [];\n      qs.forEach(dd => students.push( { uid: dd.id, ...dd.data() } ));\n\n      const studentsWithPic = await Promise.all(students.map(async s => {\n        if (!s.img) {\n          const img = await newImageURL();\n          return { ...s, img: img };\n        } else {\n          return s;\n        }\n      }));\n\n      setStudents(studentsWithPic);\n    }\n\n    const fetchGroups = async () => {\n      const qs = await getDocs(collection(firestore, 'groups'));\n      const groups = [];\n      qs.forEach(dd => groups.push( { uid: dd.id, ...dd.data() } ));\n\n      console.log('set groups: ', groups);\n      setGroups(groups);\n    }\n\n    fetchStudents();\n    fetchGroups();\n  }, []);  // Empty on purpose - the suggestion \"setGroups\" and \"setStudents\" is *wrong* - this causes a rerendering loop, where data is fetched constantly.\n\n  return (\n    <User.Provider value={userContext}>\n      <div className='App'>\n        <header>\n          <Navigation />\n        </header>\n\n        <main>\n          <Routes>\n            <Route path='/students' element={<StudentSearch elems={students} />} />\n            <Route path='/groups' element={<GroupSearch elems={groups} />} />\n            <Route path='/add' element={<Add onNewStudent={thenRedirect(addStudent, '/students')} onNewGroup={thenRedirect(addGroup, '/groups')} students={students} />} />\n            <Route path='/edit/:type/:id' element={<Edit students={students} groups={groups} onStudentEdit={thenRedirect(editStudent, '/students')} onGroupEdit={thenRedirect(editGroup, '/groups')} />} />\n            <Route path='/:type/:id/send' element={students && groups ? <SendMessage students={students} groups={groups} /> : <p>Loading st00d</p>} />\n            <Route path='/login' element={<Login />} />\n            <Route path='/:id/profile' element={students && <Profile students={students} />} />\n            <Route path='/following' element={<Following students={students.filter(s => follows.students.has(s.name))} groups={groups.filter(g => follows.groups.has(g.name))} />} />\n\n            {/* Default \"site\" is the student search. */}\n            <Route exact path='/' element={<Navigate replace to='/students' />} />\n          </Routes>\n        </main>\n      </div>\n    </User.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter basename='/PIWbois/6/std-prjs/build/'>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"choice\":\"Add_choice__XJtvp\",\"add-group\":\"Add_add-group__2CFX_\",\"current-members\":\"Add_current-members__28rxE\",\"select-student-type\":\"Add_select-student-type__ojU7t\",\"select-role\":\"Add_select-role__2xgZq\",\"add-student\":\"Add_add-student__2Ly-E\",\"find-student\":\"Add_find-student__2TLOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group-entry\":\"Group_group-entry__Zshr9\",\"group-card\":\"Group_group-card__1oueC\",\"group-member\":\"Group_group-member__s5tdK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"student-card\":\"Student_student-card__2z8Nu\",\"student-entry\":\"Student_student-entry__1pg5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SendMessage_button__2aYM3\",\"form\":\"SendMessage_form__3Cl9H\"};"],"sourceRoot":""}